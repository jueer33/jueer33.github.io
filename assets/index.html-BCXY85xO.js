import{_ as h,c as k,e as t,b as s,d as l,a as n,w as e,r as p,o as d}from"./app-CeRryCsJ.js";const r={};function g(o,i){const a=p("VPLink");return d(),k("div",null,[i[25]||(i[25]=t('<p>我遇到的常问的八股</p><h2 id="一、html" tabindex="-1"><a class="header-anchor" href="#一、html"><span>一、HTＭL</span></a></h2><ol><li>script的async和defer属性</li></ol><h2 id="二、css" tabindex="-1"><a class="header-anchor" href="#二、css"><span>二、css</span></a></h2><ol><li>position定位属性——注意absolute是相对于哪些父容器定位的</li><li>垂直居中布局可以怎么实现——会根据你得回答进行引申问题，如flex有哪些属性，grid布局和flex布局具体怎么实现等</li><li>格式化上下文-BFC—— <ol><li>最好从为什么需要设置bfc(上下div margin重叠,浮动布局高度塌陷等)</li><li>到怎么设置BFC,哪些方式可以设置BFC</li><li>设置后有什么作用(即解决那些问题)来说</li></ol></li><li>块级元素和行内元素区别</li></ol><h2 id="三、js" tabindex="-1"><a class="header-anchor" href="#三、js"><span>三、JS</span></a></h2>',6)),s("ol",null,[i[2]||(i[2]=t("<li>闭包—— <ol><li>闭包的概念</li><li>常见的闭包应用场景</li><li>可能会导致的问题——内存泄漏</li><li>内存泄漏的排查方式——浏览器的memory，performance，lighthouse</li></ol></li><li>作用域链——目前这个的具体考察比较少</li><li>原型和原型链—— <ol><li>构造函数的prototype属性和实例化对象的proto属性的关系，例用这个关系在原型中添加方法实现工厂函数模式</li><li>利用原型链进行继承，基本原理是构造函数A的prototype属性指向构造函数B的prototype属性（不能直接相等，使用object.create 或者使用对象的方式进行继承）</li></ol></li><li>promise——： <ol><li>promise解决了什么问题</li><li>promise all，allsetted，any，race，some等api</li></ol></li><li>this——： <ol><li>this指向问题，new ，aplly，call，bind和默认绑定模式优先级，</li><li>new初始化的对象还能通过apply等修改this对象吗，</li><li>函数使用call，apply绑定this后，还能再次进行this绑定吗？</li><li>bind呢?<code>bind</code> 返回的那个<strong>新函数</strong>才会“永久”固定 <code>this</code>，原函数依旧可以再次被 <code>call</code>/<code>apply</code>。</li><li>以及箭头函数的this绑定</li></ol></li><li>数组相关方法： <ol><li>push pop shift unshift map sort every any some reverse reduce filter slice splice join split concat等</li><li>哪些数组相关方法会影响原数组哪些不会？</li><li>具体每个方法的作用是什么</li></ol></li><li>深拷贝和浅拷贝 <ol><li>哪些实现的是浅拷贝，深拷贝怎么实现</li></ol></li><li>事件循环： <ol><li>哪些是宏任务 微任务</li><li>执行顺序</li></ol></li><li>防抖和节流： <ol><li>分别的概念</li><li>分别的应用场景</li></ol></li><li>怎么判断一个数据是不是数组，有哪些方法</li>",10)),s("li",null,[i[1]||(i[1]=l("跨域——",-1)),n(a,{href:"../js/1.%E8%B7%A8%E5%9F%9F.md"},{default:e(()=>[...i[0]||(i[0]=[l("1.跨域",-1)])]),_:1})])]),i[26]||(i[26]=s("h2",{id:"四、vue",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#四、vue"},[s("span",null,"四、vue")])],-1)),s("ol",null,[i[22]||(i[22]=s("li",null,[l("vue2和vue3的区别 "),s("ol",null,[s("li",null,"选项式api和组合式api"),s("li",null,"响应式原理不同"),s("li",null,"setup语法糖"),s("li",null,"diff算法不同"),s("li",null,"新增的组件等"),s("li",null,"……")])],-1)),s("li",null,[i[5]||(i[5]=l("vue2和vue3响应式原理区别：",-1)),n(a,{href:"../vue/1.vue2%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.md"},{default:e(()=>[...i[3]||(i[3]=[l("1.vue2响应式原理",-1)])]),_:1}),i[6]||(i[6]=l(" ， ",-1)),n(a,{href:"../vue/2.vue3%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.md"},{default:e(()=>[...i[4]||(i[4]=[l("2.vue3响应式原理",-1)])]),_:1}),i[7]||(i[7]=s("ol",null,[s("li",null,"数组怎么实现响应式监听"),s("li",null,"vue2中给响应式对象添加新的属性怎么实现响应式")],-1))]),s("li",null,[i[19]||(i[19]=l("nexttick ",-1)),s("ol",null,[i[18]||(i[18]=s("li",null,"为什么要用nexttic：视图是异步更新的，需要异步才能获取更新后的数据",-1)),s("li",null,[i[9]||(i[9]=l("nexttick怎么实现的：异步队列+异步实现（",-1)),i[10]||(i[10]=s("code",null,"Promise.then",-1)),i[11]||(i[11]=l("->",-1)),i[12]||(i[12]=s("code",null,"MutationObserver",-1)),i[13]||(i[13]=l("->",-1)),i[14]||(i[14]=s("code",null,"setImmediate",-1)),i[15]||(i[15]=l("->",-1)),i[16]||(i[16]=s("code",null,"setTimeout",-1)),i[17]||(i[17]=l("）",-1)),n(a,{href:"../vue/8.nexttick.md"},{default:e(()=>[...i[8]||(i[8]=[l("8.nexttick",-1)])]),_:1})])])]),i[23]||(i[23]=s("li",null,"组件间数据通信： prop emit，provide inject，bus总线（发布者订阅者模式），全局状态管理",-1)),s("li",null,[i[21]||(i[21]=l("diff算法，考得比较少，但是我知道怎么实现会有意引到这里，",-1)),n(a,{href:"../vue/3.vue%E7%9A%84diff%E7%AE%97%E6%B3%95.md"},{default:e(()=>[...i[20]||(i[20]=[l("3.vue的diff算法",-1)])]),_:1})]),i[24]||(i[24]=s("li",null,"vue的指令：v-if v-show v-on等",-1))]),i[27]||(i[27]=t(`<h2 id="五、浏览器和计网相关" tabindex="-1"><a class="header-anchor" href="#五、浏览器和计网相关"><span>五、浏览器和计网相关</span></a></h2><ol><li>浏览器存储，localstorage和seesionstorage</li><li>浏览器缓存，强缓存和协商缓存</li><li>从url到渲染到页面得过程： <ol><li>dns解析</li><li>tcp链接，http请求</li><li>dom树创建和cssom树创建</li><li>渲染树构建</li><li>排列和绘制</li></ol></li><li>https加密，我每次都只说了对称加密和非对称加密结合得方式，感觉也还行</li><li>http状态码</li><li>http1.1和http2.0的区别：头部压缩，二进制帧传输，多路复用</li></ol><h2 id="六、代码输出题" tabindex="-1"><a class="header-anchor" href="#六、代码输出题"><span>六、代码输出题</span></a></h2><blockquote><p>这种可以直接让ai出题，自己练习</p></blockquote><ol><li>事件循环代码输出题</li><li>this指向代码输出题</li></ol><h2 id="七、手写代码题" tabindex="-1"><a class="header-anchor" href="#七、手写代码题"><span>七、手写代码题</span></a></h2><ol><li>promise相关： <ol><li>目前还没有让我写过promise怎么实现的</li><li>promise any race的实现</li><li>promise any/race + 失败重试</li></ol></li><li>发布者订阅者模式</li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> bus</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Map</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">has</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">            this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">set</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Set</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">        this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">add</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    emit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">        this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">forEach</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">cb</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            cb</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        })</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">        this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">delete</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    once</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        const</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=(...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)=&gt;{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">            this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">callback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">        this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">eventName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>apply call bind</li><li>防抖和节流</li><li>原型链继承</li><li>深拷贝，注意循环引用 其他的有些是给你数据，自己进行一些数据处理，字符串处理等等，没有直接原始的手撕题或者算法题，但是比较简单</li></ol><hr><p>以上都是常问的，每一个点里面都有可能会涉及到延申问题，面试官可能会深入去问</p>`,11))])}const u=h(r,[["render",g]]),v=JSON.parse('{"path":"/frontend/6ii2f5ux/","title":"2025-秋招面经","lang":"zh-CN","frontmatter":{"title":"2025-秋招面经","createTime":"2025/10/15 16:53:19","permalink":"/frontend/6ii2f5ux/"},"readingTime":{"minutes":4.23,"words":1270},"git":{"createdTime":1760518648000,"updatedTime":1760518648000,"contributors":[{"name":"jueer33","username":"jueer33","email":"jueer33@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/jueer33?v=4","url":"https://github.com/jueer33"}]},"filePathRelative":"notes/前端相关/其他/2025-秋招面经.md","headers":[]}');export{u as comp,v as data};
